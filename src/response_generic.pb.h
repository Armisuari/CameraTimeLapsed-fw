/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8 */

#ifndef PB_OPEN_GOPRO_RESPONSE_GENERIC_PB_H_INCLUDED
#define PB_OPEN_GOPRO_RESPONSE_GENERIC_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _open_gopro_EnumResultGeneric {
    open_gopro_EnumResultGeneric_RESULT_UNKNOWN = 0,
    open_gopro_EnumResultGeneric_RESULT_SUCCESS = 1,
    open_gopro_EnumResultGeneric_RESULT_ILL_FORMED = 2,
    open_gopro_EnumResultGeneric_RESULT_NOT_SUPPORTED = 3,
    open_gopro_EnumResultGeneric_RESULT_ARGUMENT_OUT_OF_BOUNDS = 4,
    open_gopro_EnumResultGeneric_RESULT_ARGUMENT_INVALID = 5,
    open_gopro_EnumResultGeneric_RESULT_RESOURCE_NOT_AVAILABLE = 6
} open_gopro_EnumResultGeneric;

/* Struct definitions */
/* Generic Response used across many response / notification messages */
typedef struct _open_gopro_ResponseGeneric {
    open_gopro_EnumResultGeneric result; /* Generic pass/fail/error info */
} open_gopro_ResponseGeneric;

/* *
 A common model to represent a media file */
typedef struct _open_gopro_Media {
    pb_callback_t folder; /* Directory in which the media is contained */
    pb_callback_t file; /* Filename of media */
} open_gopro_Media;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _open_gopro_EnumResultGeneric_MIN open_gopro_EnumResultGeneric_RESULT_UNKNOWN
#define _open_gopro_EnumResultGeneric_MAX open_gopro_EnumResultGeneric_RESULT_RESOURCE_NOT_AVAILABLE
#define _open_gopro_EnumResultGeneric_ARRAYSIZE ((open_gopro_EnumResultGeneric)(open_gopro_EnumResultGeneric_RESULT_RESOURCE_NOT_AVAILABLE+1))

#define open_gopro_ResponseGeneric_result_ENUMTYPE open_gopro_EnumResultGeneric



/* Initializer values for message structs */
#define open_gopro_ResponseGeneric_init_default  {_open_gopro_EnumResultGeneric_MIN}
#define open_gopro_Media_init_default            {{{NULL}, NULL}, {{NULL}, NULL}}
#define open_gopro_ResponseGeneric_init_zero     {_open_gopro_EnumResultGeneric_MIN}
#define open_gopro_Media_init_zero               {{{NULL}, NULL}, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define open_gopro_ResponseGeneric_result_tag    1
#define open_gopro_Media_folder_tag              1
#define open_gopro_Media_file_tag                2

/* Struct field encoding specification for nanopb */
#define open_gopro_ResponseGeneric_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    result,            1)
#define open_gopro_ResponseGeneric_CALLBACK NULL
#define open_gopro_ResponseGeneric_DEFAULT NULL

#define open_gopro_Media_FIELDLIST(X, a) \
X(a, CALLBACK, OPTIONAL, STRING,   folder,            1) \
X(a, CALLBACK, OPTIONAL, STRING,   file,              2)
#define open_gopro_Media_CALLBACK pb_default_field_callback
#define open_gopro_Media_DEFAULT NULL

extern const pb_msgdesc_t open_gopro_ResponseGeneric_msg;
extern const pb_msgdesc_t open_gopro_Media_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define open_gopro_ResponseGeneric_fields &open_gopro_ResponseGeneric_msg
#define open_gopro_Media_fields &open_gopro_Media_msg

/* Maximum encoded size of messages (where known) */
/* open_gopro_Media_size depends on runtime parameters */
#define OPEN_GOPRO_RESPONSE_GENERIC_PB_H_MAX_SIZE open_gopro_ResponseGeneric_size
#define open_gopro_ResponseGeneric_size          2

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
