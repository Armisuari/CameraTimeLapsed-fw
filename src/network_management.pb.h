/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8 */

#ifndef PB_OPEN_GOPRO_NETWORK_MANAGEMENT_PB_H_INCLUDED
#define PB_OPEN_GOPRO_NETWORK_MANAGEMENT_PB_H_INCLUDED
#include <pb.h>
#include "response_generic.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _open_gopro_EnumProvisioning {
    open_gopro_EnumProvisioning_PROVISIONING_UNKNOWN = 0,
    open_gopro_EnumProvisioning_PROVISIONING_NEVER_STARTED = 1,
    open_gopro_EnumProvisioning_PROVISIONING_STARTED = 2,
    open_gopro_EnumProvisioning_PROVISIONING_ABORTED_BY_SYSTEM = 3,
    open_gopro_EnumProvisioning_PROVISIONING_CANCELLED_BY_USER = 4,
    open_gopro_EnumProvisioning_PROVISIONING_SUCCESS_NEW_AP = 5,
    open_gopro_EnumProvisioning_PROVISIONING_SUCCESS_OLD_AP = 6,
    open_gopro_EnumProvisioning_PROVISIONING_ERROR_FAILED_TO_ASSOCIATE = 7,
    open_gopro_EnumProvisioning_PROVISIONING_ERROR_PASSWORD_AUTH = 8,
    open_gopro_EnumProvisioning_PROVISIONING_ERROR_EULA_BLOCKING = 9,
    open_gopro_EnumProvisioning_PROVISIONING_ERROR_NO_INTERNET = 10,
    open_gopro_EnumProvisioning_PROVISIONING_ERROR_UNSUPPORTED_TYPE = 11
} open_gopro_EnumProvisioning;

typedef enum _open_gopro_EnumScanning {
    open_gopro_EnumScanning_SCANNING_UNKNOWN = 0,
    open_gopro_EnumScanning_SCANNING_NEVER_STARTED = 1,
    open_gopro_EnumScanning_SCANNING_STARTED = 2,
    open_gopro_EnumScanning_SCANNING_ABORTED_BY_SYSTEM = 3,
    open_gopro_EnumScanning_SCANNING_CANCELLED_BY_USER = 4,
    open_gopro_EnumScanning_SCANNING_SUCCESS = 5
} open_gopro_EnumScanning;

typedef enum _open_gopro_EnumScanEntryFlags {
    open_gopro_EnumScanEntryFlags_SCAN_FLAG_OPEN = 0, /* This network does not require authentication */
    open_gopro_EnumScanEntryFlags_SCAN_FLAG_AUTHENTICATED = 1, /* This network requires authentication */
    open_gopro_EnumScanEntryFlags_SCAN_FLAG_CONFIGURED = 2, /* This network has been previously provisioned */
    open_gopro_EnumScanEntryFlags_SCAN_FLAG_BEST_SSID = 4,
    open_gopro_EnumScanEntryFlags_SCAN_FLAG_ASSOCIATED = 8, /* Camera is connected to this AP */
    open_gopro_EnumScanEntryFlags_SCAN_FLAG_UNSUPPORTED_TYPE = 16
} open_gopro_EnumScanEntryFlags;

/* Struct definitions */
/* Provision state notification

 Sent during provisioning triggered via @ref RequestConnect or @ref RequestConnectNew */
typedef struct _open_gopro_NotifProvisioningState {
    open_gopro_EnumProvisioning provisioning_state; /* Provisioning / connection state */
} open_gopro_NotifProvisioningState;

/* Scanning state notification

 Triggered via @ref RequestStartScan */
typedef struct _open_gopro_NotifStartScanning {
    open_gopro_EnumScanning scanning_state; /* Scanning state */
    bool has_scan_id;
    int32_t scan_id; /* ID associated with scan results (included if scan was successful) */
    bool has_total_entries;
    int32_t total_entries; /* Number of APs found during scan (included if scan was successful) */
    int32_t total_configured_ssid; /* Total count of camera's provisioned SSIDs */
} open_gopro_NotifStartScanning;

/* *
 Connect to (but do not authenticate with) an Access Point

 This is intended to be used to connect to a previously-connected Access Point

 Response: @ref ResponseConnect

 Notification: @ref NotifProvisioningState sent periodically as provisioning state changes */
typedef struct _open_gopro_RequestConnect {
    pb_callback_t ssid; /* AP SSID */
} open_gopro_RequestConnect;

/* *
 Connect to and authenticate with an Access Point

 This is only intended to be used if the AP is not previously provisioned.

 Response: @ref ResponseConnectNew sent immediately

 Notification: @ref NotifProvisioningState sent periodically as provisioning state changes */
typedef struct _open_gopro_RequestConnectNew {
    char ssid[64]; /* AP SSID */
    char password[64]; /* AP password */
    pb_callback_t static_ip; /* Static IP address */
    pb_callback_t gateway; /* Gateway IP address */
    pb_callback_t subnet; /* Subnet mask */
    pb_callback_t dns_primary; /* Primary DNS */
    pb_callback_t dns_secondary; /* Secondary DNS */
} open_gopro_RequestConnectNew;

/* *
 Get a list of Access Points found during a @ref RequestStartScan

 Response: @ref ResponseGetApEntries */
typedef struct _open_gopro_RequestGetApEntries {
    int32_t start_index; /* Used for paging. 0 <= start_index < @ref ResponseGetApEntries .total_entries */
    int32_t max_entries; /* Used for paging. Value must be < @ref ResponseGetApEntries .total_entries */
    int32_t scan_id; /* ID corresponding to a set of scan results (i.e. @ref ResponseGetApEntries .scan_id) */
} open_gopro_RequestGetApEntries;

/* *
 Request to disconnect from currently-connected AP

 This drops the camera out of Station (STA) Mode and returns it to Access Point (AP) mode.

 Response: @ref ResponseGeneric */
typedef struct _open_gopro_RequestReleaseNetwork {
    char dummy_field;
} open_gopro_RequestReleaseNetwork;

/* *
 Start scanning for Access Points

 @note Serialization of this object is zero bytes.

 Response: @ref ResponseStartScanning  are sent immediately after the camera receives this command

 Notifications: @ref NotifStartScanning are sent periodically as scanning state changes. Use to detect scan complete. */
typedef struct _open_gopro_RequestStartScan {
    char dummy_field;
} open_gopro_RequestStartScan;

/* *
 The status of an attempt to connect to an Access Point

 Sent as the initial response to @ref RequestConnect */
typedef struct _open_gopro_ResponseConnect {
    open_gopro_EnumResultGeneric result; /* Generic pass/fail/error info */
    open_gopro_EnumProvisioning provisioning_state; /* Provisioning/connection state */
    int32_t timeout_seconds; /* Network connection timeout (seconds) */
} open_gopro_ResponseConnect;

/* *
 The status of an attempt to connect to an Access Point

 Sent as the initial response to @ref RequestConnectNew */
typedef struct _open_gopro_ResponseConnectNew {
    open_gopro_EnumResultGeneric result; /* Status of Connect New request */
    open_gopro_EnumProvisioning provisioning_state; /* Current provisioning state of the network */
    /* *
 Number of seconds camera will wait before declaring a network connection attempt failed */
    int32_t timeout_seconds;
} open_gopro_ResponseConnectNew;

/* *
 A list of scan entries describing a scanned Access Point

 This is sent in response to a @ref RequestGetApEntries */
typedef struct _open_gopro_ResponseGetApEntries {
    open_gopro_EnumResultGeneric result; /* Generic pass/fail/error info */
    int32_t scan_id; /* ID associated with this batch of results */
    pb_callback_t entries; /* Array containing details about discovered APs */
} open_gopro_ResponseGetApEntries;

/* *
 An individual Scan Entry in a @ref ResponseGetApEntries response

 @note When `scan_entry_flags` contains `SCAN_FLAG_CONFIGURED`, it is an indication that this network has already been provisioned. */
typedef struct _open_gopro_ResponseGetApEntries_ScanEntry {
    pb_callback_t ssid; /* AP SSID */
    int32_t signal_strength_bars; /* Signal strength (3 bars: >-70 dBm; 2 bars: >-85 dBm; 1 bar: <=-85 dBm) */
    int32_t signal_frequency_mhz; /* Signal frequency (MHz) */
    int32_t scan_entry_flags; /* Bitmasked value from @ref EnumScanEntryFlags */
} open_gopro_ResponseGetApEntries_ScanEntry;

/* *
 The current scanning state.

 This is the initial response to a @ref RequestStartScan */
typedef struct _open_gopro_ResponseStartScanning {
    open_gopro_EnumResultGeneric result; /* Generic pass/fail/error info */
    open_gopro_EnumScanning scanning_state; /* Scanning state */
} open_gopro_ResponseStartScanning;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _open_gopro_EnumProvisioning_MIN open_gopro_EnumProvisioning_PROVISIONING_UNKNOWN
#define _open_gopro_EnumProvisioning_MAX open_gopro_EnumProvisioning_PROVISIONING_ERROR_UNSUPPORTED_TYPE
#define _open_gopro_EnumProvisioning_ARRAYSIZE ((open_gopro_EnumProvisioning)(open_gopro_EnumProvisioning_PROVISIONING_ERROR_UNSUPPORTED_TYPE+1))

#define _open_gopro_EnumScanning_MIN open_gopro_EnumScanning_SCANNING_UNKNOWN
#define _open_gopro_EnumScanning_MAX open_gopro_EnumScanning_SCANNING_SUCCESS
#define _open_gopro_EnumScanning_ARRAYSIZE ((open_gopro_EnumScanning)(open_gopro_EnumScanning_SCANNING_SUCCESS+1))

#define _open_gopro_EnumScanEntryFlags_MIN open_gopro_EnumScanEntryFlags_SCAN_FLAG_OPEN
#define _open_gopro_EnumScanEntryFlags_MAX open_gopro_EnumScanEntryFlags_SCAN_FLAG_UNSUPPORTED_TYPE
#define _open_gopro_EnumScanEntryFlags_ARRAYSIZE ((open_gopro_EnumScanEntryFlags)(open_gopro_EnumScanEntryFlags_SCAN_FLAG_UNSUPPORTED_TYPE+1))

#define open_gopro_NotifProvisioningState_provisioning_state_ENUMTYPE open_gopro_EnumProvisioning

#define open_gopro_NotifStartScanning_scanning_state_ENUMTYPE open_gopro_EnumScanning






#define open_gopro_ResponseConnect_result_ENUMTYPE open_gopro_EnumResultGeneric
#define open_gopro_ResponseConnect_provisioning_state_ENUMTYPE open_gopro_EnumProvisioning

#define open_gopro_ResponseConnectNew_result_ENUMTYPE open_gopro_EnumResultGeneric
#define open_gopro_ResponseConnectNew_provisioning_state_ENUMTYPE open_gopro_EnumProvisioning

#define open_gopro_ResponseGetApEntries_result_ENUMTYPE open_gopro_EnumResultGeneric


#define open_gopro_ResponseStartScanning_result_ENUMTYPE open_gopro_EnumResultGeneric
#define open_gopro_ResponseStartScanning_scanning_state_ENUMTYPE open_gopro_EnumScanning


/* Initializer values for message structs */
#define open_gopro_NotifProvisioningState_init_default {_open_gopro_EnumProvisioning_MIN}
#define open_gopro_NotifStartScanning_init_default {_open_gopro_EnumScanning_MIN, false, 0, false, 0, 0}
#define open_gopro_RequestConnect_init_default   {{{NULL}, NULL}}
#define open_gopro_RequestConnectNew_init_default {"", "", {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define open_gopro_RequestGetApEntries_init_default {0, 0, 0}
#define open_gopro_RequestReleaseNetwork_init_default {0}
#define open_gopro_RequestStartScan_init_default {0}
#define open_gopro_ResponseConnect_init_default  {_open_gopro_EnumResultGeneric_MIN, _open_gopro_EnumProvisioning_MIN, 0}
#define open_gopro_ResponseConnectNew_init_default {_open_gopro_EnumResultGeneric_MIN, _open_gopro_EnumProvisioning_MIN, 0}
#define open_gopro_ResponseGetApEntries_init_default {_open_gopro_EnumResultGeneric_MIN, 0, {{NULL}, NULL}}
#define open_gopro_ResponseGetApEntries_ScanEntry_init_default {{{NULL}, NULL}, 0, 0, 0}
#define open_gopro_ResponseStartScanning_init_default {_open_gopro_EnumResultGeneric_MIN, _open_gopro_EnumScanning_MIN}
#define open_gopro_NotifProvisioningState_init_zero {_open_gopro_EnumProvisioning_MIN}
#define open_gopro_NotifStartScanning_init_zero  {_open_gopro_EnumScanning_MIN, false, 0, false, 0, 0}
#define open_gopro_RequestConnect_init_zero      {{{NULL}, NULL}}
#define open_gopro_RequestConnectNew_init_zero   {"", "", {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define open_gopro_RequestGetApEntries_init_zero {0, 0, 0}
#define open_gopro_RequestReleaseNetwork_init_zero {0}
#define open_gopro_RequestStartScan_init_zero    {0}
#define open_gopro_ResponseConnect_init_zero     {_open_gopro_EnumResultGeneric_MIN, _open_gopro_EnumProvisioning_MIN, 0}
#define open_gopro_ResponseConnectNew_init_zero  {_open_gopro_EnumResultGeneric_MIN, _open_gopro_EnumProvisioning_MIN, 0}
#define open_gopro_ResponseGetApEntries_init_zero {_open_gopro_EnumResultGeneric_MIN, 0, {{NULL}, NULL}}
#define open_gopro_ResponseGetApEntries_ScanEntry_init_zero {{{NULL}, NULL}, 0, 0, 0}
#define open_gopro_ResponseStartScanning_init_zero {_open_gopro_EnumResultGeneric_MIN, _open_gopro_EnumScanning_MIN}

/* Field tags (for use in manual encoding/decoding) */
#define open_gopro_NotifProvisioningState_provisioning_state_tag 1
#define open_gopro_NotifStartScanning_scanning_state_tag 1
#define open_gopro_NotifStartScanning_scan_id_tag 2
#define open_gopro_NotifStartScanning_total_entries_tag 3
#define open_gopro_NotifStartScanning_total_configured_ssid_tag 4
#define open_gopro_RequestConnect_ssid_tag       1
#define open_gopro_RequestConnectNew_ssid_tag    1
#define open_gopro_RequestConnectNew_password_tag 2
#define open_gopro_RequestConnectNew_static_ip_tag 3
#define open_gopro_RequestConnectNew_gateway_tag 4
#define open_gopro_RequestConnectNew_subnet_tag  5
#define open_gopro_RequestConnectNew_dns_primary_tag 6
#define open_gopro_RequestConnectNew_dns_secondary_tag 7
#define open_gopro_RequestGetApEntries_start_index_tag 1
#define open_gopro_RequestGetApEntries_max_entries_tag 2
#define open_gopro_RequestGetApEntries_scan_id_tag 3
#define open_gopro_ResponseConnect_result_tag    1
#define open_gopro_ResponseConnect_provisioning_state_tag 2
#define open_gopro_ResponseConnect_timeout_seconds_tag 3
#define open_gopro_ResponseConnectNew_result_tag 1
#define open_gopro_ResponseConnectNew_provisioning_state_tag 2
#define open_gopro_ResponseConnectNew_timeout_seconds_tag 3
#define open_gopro_ResponseGetApEntries_result_tag 1
#define open_gopro_ResponseGetApEntries_scan_id_tag 2
#define open_gopro_ResponseGetApEntries_entries_tag 3
#define open_gopro_ResponseGetApEntries_ScanEntry_ssid_tag 1
#define open_gopro_ResponseGetApEntries_ScanEntry_signal_strength_bars_tag 2
#define open_gopro_ResponseGetApEntries_ScanEntry_signal_frequency_mhz_tag 4
#define open_gopro_ResponseGetApEntries_ScanEntry_scan_entry_flags_tag 5
#define open_gopro_ResponseStartScanning_result_tag 1
#define open_gopro_ResponseStartScanning_scanning_state_tag 2

/* Struct field encoding specification for nanopb */
#define open_gopro_NotifProvisioningState_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    provisioning_state,   1)
#define open_gopro_NotifProvisioningState_CALLBACK NULL
#define open_gopro_NotifProvisioningState_DEFAULT NULL

#define open_gopro_NotifStartScanning_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    scanning_state,    1) \
X(a, STATIC,   OPTIONAL, INT32,    scan_id,           2) \
X(a, STATIC,   OPTIONAL, INT32,    total_entries,     3) \
X(a, STATIC,   REQUIRED, INT32,    total_configured_ssid,   4)
#define open_gopro_NotifStartScanning_CALLBACK NULL
#define open_gopro_NotifStartScanning_DEFAULT NULL

#define open_gopro_RequestConnect_FIELDLIST(X, a) \
X(a, CALLBACK, REQUIRED, STRING,   ssid,              1)
#define open_gopro_RequestConnect_CALLBACK pb_default_field_callback
#define open_gopro_RequestConnect_DEFAULT NULL

#define open_gopro_RequestConnectNew_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, STRING,   ssid,              1) \
X(a, STATIC,   REQUIRED, STRING,   password,          2) \
X(a, CALLBACK, OPTIONAL, BYTES,    static_ip,         3) \
X(a, CALLBACK, OPTIONAL, BYTES,    gateway,           4) \
X(a, CALLBACK, OPTIONAL, BYTES,    subnet,            5) \
X(a, CALLBACK, OPTIONAL, BYTES,    dns_primary,       6) \
X(a, CALLBACK, OPTIONAL, BYTES,    dns_secondary,     7)
#define open_gopro_RequestConnectNew_CALLBACK pb_default_field_callback
#define open_gopro_RequestConnectNew_DEFAULT NULL

#define open_gopro_RequestGetApEntries_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, INT32,    start_index,       1) \
X(a, STATIC,   REQUIRED, INT32,    max_entries,       2) \
X(a, STATIC,   REQUIRED, INT32,    scan_id,           3)
#define open_gopro_RequestGetApEntries_CALLBACK NULL
#define open_gopro_RequestGetApEntries_DEFAULT NULL

#define open_gopro_RequestReleaseNetwork_FIELDLIST(X, a) \

#define open_gopro_RequestReleaseNetwork_CALLBACK NULL
#define open_gopro_RequestReleaseNetwork_DEFAULT NULL

#define open_gopro_RequestStartScan_FIELDLIST(X, a) \

#define open_gopro_RequestStartScan_CALLBACK NULL
#define open_gopro_RequestStartScan_DEFAULT NULL

#define open_gopro_ResponseConnect_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    result,            1) \
X(a, STATIC,   REQUIRED, UENUM,    provisioning_state,   2) \
X(a, STATIC,   REQUIRED, INT32,    timeout_seconds,   3)
#define open_gopro_ResponseConnect_CALLBACK NULL
#define open_gopro_ResponseConnect_DEFAULT NULL

#define open_gopro_ResponseConnectNew_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    result,            1) \
X(a, STATIC,   REQUIRED, UENUM,    provisioning_state,   2) \
X(a, STATIC,   REQUIRED, INT32,    timeout_seconds,   3)
#define open_gopro_ResponseConnectNew_CALLBACK NULL
#define open_gopro_ResponseConnectNew_DEFAULT NULL

#define open_gopro_ResponseGetApEntries_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    result,            1) \
X(a, STATIC,   REQUIRED, INT32,    scan_id,           2) \
X(a, CALLBACK, REPEATED, MESSAGE,  entries,           3)
#define open_gopro_ResponseGetApEntries_CALLBACK pb_default_field_callback
#define open_gopro_ResponseGetApEntries_DEFAULT NULL
#define open_gopro_ResponseGetApEntries_entries_MSGTYPE open_gopro_ResponseGetApEntries_ScanEntry

#define open_gopro_ResponseGetApEntries_ScanEntry_FIELDLIST(X, a) \
X(a, CALLBACK, REQUIRED, STRING,   ssid,              1) \
X(a, STATIC,   REQUIRED, INT32,    signal_strength_bars,   2) \
X(a, STATIC,   REQUIRED, INT32,    signal_frequency_mhz,   4) \
X(a, STATIC,   REQUIRED, INT32,    scan_entry_flags,   5)
#define open_gopro_ResponseGetApEntries_ScanEntry_CALLBACK pb_default_field_callback
#define open_gopro_ResponseGetApEntries_ScanEntry_DEFAULT NULL

#define open_gopro_ResponseStartScanning_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    result,            1) \
X(a, STATIC,   REQUIRED, UENUM,    scanning_state,    2)
#define open_gopro_ResponseStartScanning_CALLBACK NULL
#define open_gopro_ResponseStartScanning_DEFAULT NULL

extern const pb_msgdesc_t open_gopro_NotifProvisioningState_msg;
extern const pb_msgdesc_t open_gopro_NotifStartScanning_msg;
extern const pb_msgdesc_t open_gopro_RequestConnect_msg;
extern const pb_msgdesc_t open_gopro_RequestConnectNew_msg;
extern const pb_msgdesc_t open_gopro_RequestGetApEntries_msg;
extern const pb_msgdesc_t open_gopro_RequestReleaseNetwork_msg;
extern const pb_msgdesc_t open_gopro_RequestStartScan_msg;
extern const pb_msgdesc_t open_gopro_ResponseConnect_msg;
extern const pb_msgdesc_t open_gopro_ResponseConnectNew_msg;
extern const pb_msgdesc_t open_gopro_ResponseGetApEntries_msg;
extern const pb_msgdesc_t open_gopro_ResponseGetApEntries_ScanEntry_msg;
extern const pb_msgdesc_t open_gopro_ResponseStartScanning_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define open_gopro_NotifProvisioningState_fields &open_gopro_NotifProvisioningState_msg
#define open_gopro_NotifStartScanning_fields &open_gopro_NotifStartScanning_msg
#define open_gopro_RequestConnect_fields &open_gopro_RequestConnect_msg
#define open_gopro_RequestConnectNew_fields &open_gopro_RequestConnectNew_msg
#define open_gopro_RequestGetApEntries_fields &open_gopro_RequestGetApEntries_msg
#define open_gopro_RequestReleaseNetwork_fields &open_gopro_RequestReleaseNetwork_msg
#define open_gopro_RequestStartScan_fields &open_gopro_RequestStartScan_msg
#define open_gopro_ResponseConnect_fields &open_gopro_ResponseConnect_msg
#define open_gopro_ResponseConnectNew_fields &open_gopro_ResponseConnectNew_msg
#define open_gopro_ResponseGetApEntries_fields &open_gopro_ResponseGetApEntries_msg
#define open_gopro_ResponseGetApEntries_ScanEntry_fields &open_gopro_ResponseGetApEntries_ScanEntry_msg
#define open_gopro_ResponseStartScanning_fields &open_gopro_ResponseStartScanning_msg

/* Maximum encoded size of messages (where known) */
/* open_gopro_RequestConnect_size depends on runtime parameters */
/* open_gopro_RequestConnectNew_size depends on runtime parameters */
/* open_gopro_ResponseGetApEntries_size depends on runtime parameters */
/* open_gopro_ResponseGetApEntries_ScanEntry_size depends on runtime parameters */
#define OPEN_GOPRO_NETWORK_MANAGEMENT_PB_H_MAX_SIZE open_gopro_NotifStartScanning_size
#define open_gopro_NotifProvisioningState_size   2
#define open_gopro_NotifStartScanning_size       35
#define open_gopro_RequestGetApEntries_size      33
#define open_gopro_RequestReleaseNetwork_size    0
#define open_gopro_RequestStartScan_size         0
#define open_gopro_ResponseConnectNew_size       15
#define open_gopro_ResponseConnect_size          15
#define open_gopro_ResponseStartScanning_size    4

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
